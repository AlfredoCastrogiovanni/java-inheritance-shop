package org.learning.products;

import java.math.BigDecimal;

public class Headphones extends Product {
    private String color;
    private boolean isWireless;

    public Headphones(String name, String description, double price, int vat, String color, boolean isWireless) {
        super(name, description, price, vat);
        this.color = color;
        this.isWireless = isWireless;
    }

    @Override
    public String toString() {
        return "Headphones [color=" + color + ", isWireless=" + isWireless + ", productCode=" + productCode + ", name="
                + name + ", description=" + description + ", price=" + price + ", vat=" + vat + "]";
    }

    /**
    * Returns the price of a product, applying a discount based on whether the product is wireless.
    * <p>
    * If the product is not wireless, a 7% discount is applied to the price including VAT.
    * Otherwise, the price is determined by the superclass implementation, which may apply
    * a discount based on the user's fidelity card status.
    * </p>
    * Generated by AI
    *
    * @param hasFidelityCard a boolean indicating whether the user has a fidelity card
    * @return the price of the product with a 7% discount if the product is not wireless,
    *         otherwise the price from the superclass method
    */
    @Override
    public BigDecimal getPrice(boolean hasFidelityCard) {
        if (!isWireless) {
            return priceWithVat().subtract(priceWithVat().multiply(BigDecimal.valueOf(7)).divide(BigDecimal.valueOf(100)));
        } else {
            return super.getPrice(hasFidelityCard);
        }
    }
}
