package org.learning.products;

import java.math.BigDecimal;

public class Smartphone extends Product {
    private String IMEI;
    private double memory;

    public Smartphone(String name, String description, double price, int vat, String IMEI, double memory) {
        super(name, description, price, vat);
        this.IMEI = IMEI;
        this.memory = memory;
    }

    @Override
    public String toString() {
        return "Smartphone [IMEI=" + IMEI + ", memory=" + memory + ", productCode=" + productCode + ", name=" + name
                + ", description=" + description + ", price=" + price + ", vat=" + vat + "]";
    }

    /**
    * Returns the price of a product, applying a discount based on the memory size.
    * Returns the price of a product, applying a discount based on the memory size.
    * <p>
    * If the memory is less than 32, a 5% discount is applied to the price including VAT.
    * Otherwise, the price is determined by the superclass implementation, which may apply
    * a discount based on the user's fidelity card status.
    * </p>
    * Generated by AI
    *
    * @param hasFidelityCard a boolean indicating whether the user has a fidelity card
    * @return the price of the product with a 5% discount if the memory is less than 32,
    *         otherwise the price from the superclass method
    */
    @Override
    public BigDecimal getPrice(boolean hasFidelityCard) {
        if (memory < 32) {
            return priceWithVat().subtract(priceWithVat().multiply(BigDecimal.valueOf(5)).divide(BigDecimal.valueOf(100)));
        } else {
            return super.getPrice(hasFidelityCard);
        }
    }
}
