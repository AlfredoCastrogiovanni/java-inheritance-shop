package org.learning.products;

import java.math.BigDecimal;

public class Tv extends Product {
    private double inch;
    private boolean isSmart;

    public Tv(String name, String description, double price, int vat, double inch, boolean isSmart) {
        super(name, description, price, vat);
        this.inch = inch;
        this.isSmart = isSmart;
    }

    @Override
    public String toString() {
        return "Tv [inch=" + inch + ", isSmart=" + isSmart + ", productCode=" + productCode + ", name=" + name
                + ", description=" + description + ", price=" + price + ", vat=" + vat + "]";
    }

    /**
    * Returns the price of a product, applying a discount based on whether the product is smart.
    * <p>
    * If the product is not smart, a 10% discount is applied to the price including VAT.
    * Otherwise, the price is determined by the superclass implementation, which may apply
    * a discount based on the user's fidelity card status.
    * </p>
    * Generated by AI
    *
    * @param hasFidelityCard a boolean indicating whether the user has a fidelity card
    * @return the price of the product with a 10% discount if the product is not smart,
    *         otherwise the price from the superclass method
    */
    @Override
    public BigDecimal getPrice(boolean hasFidelityCard) {
        if (!isSmart) {
            return priceWithVat().subtract(priceWithVat().multiply(BigDecimal.valueOf(10)).divide(BigDecimal.valueOf(100)));
        } else {
            return super.getPrice(hasFidelityCard);
        }
    }
}
